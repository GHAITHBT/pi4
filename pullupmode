from RPiMCP23S17.MCP23S17 import MCP23S17
import time

# Initialize the MCP23S17 device
mcp = MCP23S17(bus=0x00, pin_cs=0x00, device_id=0x00)

# Open the MCP device
mcp.open()

# Set GPIOA7 as output (for LED) and GPIOB7 as input (for ground detection)
mcp.setDirection(7, MCP23S17.DIR_OUTPUT)  # Set GPIOA7 as output (LED)
mcp.setDirection(15, MCP23S17.DIR_INPUT)   # Set GPIOB7 as input (ground detection)

# Turn off all GPIO pins initially
for pin in range(0, 16):
    mcp.digitalWrite(pin, MCP23S17.LEVEL_LOW)

# Turn on the LED connected to GPIOA7
mcp.digitalWrite(7, MCP23S17.LEVEL_HIGH)  # Set GPIOA7 high to turn on the LED

print("LED on GPIOA7 is ON. Press button to connect GPIOB7 to ground and turn off the LED.")

try:
    while True:
        # Read GPIOB to check if GPIOB7 is grounded
        if mcp.digitalRead(15) == MCP23S17.LEVEL_LOW:  # Check if GPIOB7 is low (grounded)
            print("GPIOB7 is LOW, turning off LED on GPIOA7")
            mcp.digitalWrite(7, MCP23S17.LEVEL_LOW)  # Set GPIOA7 low to turn off the LED
            break  # Exit the loop after turning off the LED

        time.sleep(0.1)  # Short delay to avoid rapid looping
except KeyboardInterrupt:
    print("Program terminated by user.")
finally:
    # Clean up: Set GPIOA7 to low and close MCP device
    mcp.digitalWrite(7, MCP23S17.LEVEL_LOW)  # Ensure the LED is off
    mcp.close()
